  <TestCase name="getExecPlan[q45]">
    <Resource name="sql">
      <![CDATA[/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

-- start query 1 in stream 0 using template query45.tpl and seed 2031708268
select ca_zip, ca_county, sum(ws_sales_price)
 from web_sales, customer, customer_address, date_dim, item
 where ws_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk 
 	and ws_item_sk = i_item_sk 
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475', '85392', '85460', '80348', '81792')
 	      or 
 	      i_item_id in (select i_item_id
                             from item
                             where i_item_sk in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)
                             )
 	    )
 	and ws_sold_date_sk = d_date_sk
 	and d_qoy = 2 and d_year = 2000
 group by ca_zip, ca_county
 order by ca_zip, ca_county
 limit 100

-- end query 1 in stream 0 using template query45.tpl
]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalSort(sort0=[$0], sort1=[$1], dir0=[ASC-nulls-first], dir1=[ASC-nulls-first], fetch=[100])
+- LogicalAggregate(group=[{0, 1}], EXPR$2=[SUM($2)])
   +- LogicalProject(ca_zip=[$61], ca_county=[$59], ws_sales_price=[$20])
      +- LogicalFilter(condition=[AND(=($3, $34), =($38, $52), =($2, $93), OR(=(SUBSTR($61, 1, 5), _UTF-16LE'85669'), =(SUBSTR($61, 1, 5), _UTF-16LE'86197'), =(SUBSTR($61, 1, 5), _UTF-16LE'88274'), =(SUBSTR($61, 1, 5), _UTF-16LE'83405'), =(SUBSTR($61, 1, 5), _UTF-16LE'86475'), =(SUBSTR($61, 1, 5), _UTF-16LE'85392'), =(SUBSTR($61, 1, 5), _UTF-16LE'85460'), =(SUBSTR($61, 1, 5), _UTF-16LE'80348'), =(SUBSTR($61, 1, 5), _UTF-16LE'81792'), IN($94, {
LogicalProject(i_item_id=[$1])
  LogicalFilter(condition=[OR(=($0, 2), =($0, 3), =($0, 5), =($0, 7), =($0, 11), =($0, 13), =($0, 17), =($0, 19), =($0, 23), =($0, 29))])
    LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item]])
})), =($33, $65), =($75, 2), =($71, 2000))])
         +- LogicalJoin(condition=[true], joinType=[inner])
            :- LogicalJoin(condition=[true], joinType=[inner])
            :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :  :- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, web_sales]])
            :  :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, customer]])
            :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, customer_address]])
            :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
            +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
SortLimit(orderBy=[ca_zip ASC, ca_county ASC], offset=[0], fetch=[100], global=[true])
+- Exchange(distribution=[single])
   +- SortLimit(orderBy=[ca_zip ASC, ca_county ASC], offset=[0], fetch=[100], global=[false])
      +- HashAggregate(isMerge=[false], groupBy=[ca_zip, ca_county], select=[ca_zip, ca_county, SUM(ws_sales_price) AS EXPR$2])
         +- Exchange(distribution=[hash[ca_zip, ca_county]])
            +- Calc(select=[ca_zip, ca_county, ws_sales_price])
               +- HashJoin(joinType=[InnerJoin], where=[((ws_item_sk = i_item_sk) AND (i IS NOT NULL OR SEARCH(SUBSTR(ca_zip, 1, 5), Sarg[_UTF-16LE'80348', _UTF-16LE'81792', _UTF-16LE'83405', _UTF-16LE'85392', _UTF-16LE'85460', _UTF-16LE'85669', _UTF-16LE'86197', _UTF-16LE'86475', _UTF-16LE'88274'])))], select=[ws_item_sk, ws_sales_price, ca_county, ca_zip, i_item_sk, i], isBroadcast=[true], build=[right])
                  :- Calc(select=[ws_item_sk, ws_sales_price, ca_county, ca_zip])
                  :  +- HashJoin(joinType=[InnerJoin], where=[(c_current_addr_sk = ca_address_sk)], select=[c_current_addr_sk, ws_item_sk, ws_sales_price, ca_address_sk, ca_county, ca_zip], build=[right])
                  :     :- Exchange(distribution=[hash[c_current_addr_sk]])
                  :     :  +- Calc(select=[c_current_addr_sk, ws_item_sk, ws_sales_price])
                  :     :     +- HashJoin(joinType=[InnerJoin], where=[(ws_bill_customer_sk = c_customer_sk)], select=[c_customer_sk, c_current_addr_sk, ws_item_sk, ws_bill_customer_sk, ws_sales_price], build=[left])
                  :     :        :- Exchange(distribution=[hash[c_customer_sk]])
                  :     :        :  +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, customer, project=[c_customer_sk, c_current_addr_sk]]], fields=[c_customer_sk, c_current_addr_sk])
                  :     :        +- Exchange(distribution=[hash[ws_bill_customer_sk]])
                  :     :           +- Calc(select=[ws_item_sk, ws_bill_customer_sk, ws_sales_price])
                  :     :              +- HashJoin(joinType=[InnerJoin], where=[(ws_sold_date_sk = d_date_sk)], select=[ws_item_sk, ws_bill_customer_sk, ws_sales_price, ws_sold_date_sk, d_date_sk], isBroadcast=[true], build=[right])
                  :     :                 :- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, web_sales, project=[ws_item_sk, ws_bill_customer_sk, ws_sales_price, ws_sold_date_sk], project=[ws_item_sk, ws_bill_customer_sk, ws_sales_price, ws_sold_date_sk]]], fields=[ws_item_sk, ws_bill_customer_sk, ws_sales_price, ws_sold_date_sk], dpp=[d_date_sk])
                  :     :                 +- Exchange(distribution=[broadcast])
                  :     :                    +- Calc(select=[d_date_sk], where=[((d_qoy = 2) AND (d_year = 2000))])
                  :     :                       +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim, project=[d_date_sk, d_year, d_qoy]]], fields=[d_date_sk, d_year, d_qoy])
                  :     +- Exchange(distribution=[hash[ca_address_sk]])
                  :        +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, customer_address, project=[ca_address_sk, ca_county, ca_zip]]], fields=[ca_address_sk, ca_county, ca_zip])
                  +- Exchange(distribution=[broadcast])
                     +- Calc(select=[i_item_sk, i])
                        +- HashJoin(joinType=[LeftOuterJoin], where=[(i_item_id = i_item_id0)], select=[i_item_sk, i_item_id, i_item_id0, i], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item, project=[i_item_sk, i_item_id]]], fields=[i_item_sk, i_item_id])(reuse_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- Calc(select=[i_item_id, true AS i])
                                 +- HashAggregate(isMerge=[false], groupBy=[i_item_id], select=[i_item_id])
                                    +- Exchange(distribution=[hash[i_item_id]])
                                       +- Calc(select=[i_item_id], where=[SEARCH(i_item_sk, Sarg[2, 3, 5, 7, 11, 13, 17, 19, 23, 29])])
                                          +- Reused(reference_id=[1])
]]>
    </Resource>
  </TestCase>
