  <TestCase name="getExecPlan[q18]">
    <Resource name="sql">
      <![CDATA[/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

-- start query 1 in stream 0 using template query18.tpl and seed 1978355063
select  i_item_id,
        ca_country,
        ca_state, 
        ca_county,
        avg(cast(cs_quantity as decimal(12,2))) agg1,
        avg( cast(cs_list_price as decimal(12,2))) agg2,
        avg( cast(cs_coupon_amt as decimal(12,2))) agg3,
        avg( cast(cs_sales_price as decimal(12,2))) agg4,
        avg( cast(cs_net_profit as decimal(12,2))) agg5,
        avg( cast(c_birth_year as decimal(12,2))) agg6,
        avg( cast(cd1.cd_dep_count as decimal(12,2))) agg7
 from catalog_sales, customer_demographics cd1, 
      customer_demographics cd2, customer, customer_address, date_dim, item
 where cs_sold_date_sk = d_date_sk and
       cs_item_sk = i_item_sk and
       cs_bill_cdemo_sk = cd1.cd_demo_sk and
       cs_bill_customer_sk = c_customer_sk and
       cd1.cd_gender = 'M' and 
       cd1.cd_education_status = 'College' and
       c_current_cdemo_sk = cd2.cd_demo_sk and
       c_current_addr_sk = ca_address_sk and
       c_birth_month in (9,5,12,4,1,10) and
       d_year = 2001 and
       ca_state in ('ND','WI','AL'
                   ,'NC','OK','MS','TN')
 group by rollup (i_item_id, ca_country, ca_state, ca_county)
 order by ca_country,
        ca_state, 
        ca_county,
	i_item_id
 limit 100

-- end query 1 in stream 0 using template query18.tpl
]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalSort(sort0=[$1], sort1=[$2], sort2=[$3], sort3=[$0], dir0=[ASC-nulls-first], dir1=[ASC-nulls-first], dir2=[ASC-nulls-first], dir3=[ASC-nulls-first], fetch=[100])
+- LogicalAggregate(group=[{0, 1, 2, 3}], groups=[[{0, 1, 2, 3}, {0, 1, 2}, {0, 1}, {0}, {}]], agg1=[AVG($4)], agg2=[AVG($5)], agg3=[AVG($6)], agg4=[AVG($7)], agg5=[AVG($8)], agg6=[AVG($9)], agg7=[AVG($10)])
   +- LogicalProject(i_item_id=[$112], ca_country=[$80], ca_state=[$78], ca_county=[$77], $f4=[CAST($17):DECIMAL(12, 2)], $f5=[CAST($19):DECIMAL(12, 2)], $f6=[CAST($26):DECIMAL(12, 2)], $f7=[CAST($20):DECIMAL(12, 2)], $f8=[CAST($32):DECIMAL(12, 2)], $f9=[CAST($65):DECIMAL(12, 2)], $f10=[CAST($40):DECIMAL(12, 2)])
      +- LogicalFilter(condition=[AND(=($33, $83), =($14, $111), =($3, $34), =($2, $52), =($35, _UTF-16LE'M'), =($37, _UTF-16LE'College'), =($54, $43), =($56, $70), OR(=($64, 9), =($64, 5), =($64, 12), =($64, 4), =($64, 1), =($64, 10)), =($89, 2001), OR(=($78, _UTF-16LE'ND'), =($78, _UTF-16LE'WI'), =($78, _UTF-16LE'AL'), =($78, _UTF-16LE'NC'), =($78, _UTF-16LE'OK'), =($78, _UTF-16LE'MS'), =($78, _UTF-16LE'TN')))])
         +- LogicalJoin(condition=[true], joinType=[inner])
            :- LogicalJoin(condition=[true], joinType=[inner])
            :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :  :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :  :  :  :- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, catalog_sales]])
            :  :  :  :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, customer_demographics]])
            :  :  :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, customer_demographics]])
            :  :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, customer]])
            :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, customer_address]])
            :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
            +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
Calc(select=[i_item_id, ca_country, ca_state, ca_county, agg1, agg2, agg3, agg4, agg5, agg6, agg7])
+- SortLimit(orderBy=[ca_country ASC, ca_state ASC, ca_county ASC, i_item_id ASC], offset=[0], fetch=[100], global=[true])
   +- Exchange(distribution=[single])
      +- SortLimit(orderBy=[ca_country ASC, ca_state ASC, ca_county ASC, i_item_id ASC], offset=[0], fetch=[100], global=[false])
         +- HashAggregate(isMerge=[true], groupBy=[i_item_id, ca_country, ca_state, ca_county, $e], select=[i_item_id, ca_country, ca_state, ca_county, $e, Final_AVG(sum$0, count$1) AS agg1, Final_AVG(sum$2, count$3) AS agg2, Final_AVG(sum$4, count$5) AS agg3, Final_AVG(sum$6, count$7) AS agg4, Final_AVG(sum$8, count$9) AS agg5, Final_AVG(sum$10, count$11) AS agg6, Final_AVG(sum$12, count$13) AS agg7])
            +- Exchange(distribution=[hash[i_item_id, ca_country, ca_state, ca_county, $e]])
               +- LocalHashAggregate(groupBy=[i_item_id, ca_country, ca_state, ca_county, $e], select=[i_item_id, ca_country, ca_state, ca_county, $e, Partial_AVG($f4) AS (sum$0, count$1), Partial_AVG($f5) AS (sum$2, count$3), Partial_AVG($f6) AS (sum$4, count$5), Partial_AVG($f7) AS (sum$6, count$7), Partial_AVG($f8) AS (sum$8, count$9), Partial_AVG($f9) AS (sum$10, count$11), Partial_AVG($f10) AS (sum$12, count$13)])
                  +- Expand(projects=[{i_item_id, ca_country, ca_state, ca_county, $f4, $f5, $f6, $f7, $f8, $f9, $f10, 0 AS $e}, {i_item_id, ca_country, ca_state, null AS ca_county, $f4, $f5, $f6, $f7, $f8, $f9, $f10, 1 AS $e}, {i_item_id, ca_country, null AS ca_state, null AS ca_county, $f4, $f5, $f6, $f7, $f8, $f9, $f10, 3 AS $e}, {i_item_id, null AS ca_country, null AS ca_state, null AS ca_county, $f4, $f5, $f6, $f7, $f8, $f9, $f10, 7 AS $e}, {null AS i_item_id, null AS ca_country, null AS ca_state, null AS ca_county, $f4, $f5, $f6, $f7, $f8, $f9, $f10, 15 AS $e}])
                     +- Calc(select=[i_item_id, ca_country, ca_state, ca_county, CAST(cs_quantity AS DECIMAL(12, 2)) AS $f4, CAST(cs_list_price AS DECIMAL(12, 2)) AS $f5, CAST(cs_coupon_amt AS DECIMAL(12, 2)) AS $f6, CAST(cs_sales_price AS DECIMAL(12, 2)) AS $f7, CAST(cs_net_profit AS DECIMAL(12, 2)) AS $f8, CAST(c_birth_year AS DECIMAL(12, 2)) AS $f9, CAST(cd_dep_count AS DECIMAL(12, 2)) AS $f10])
                        +- HashJoin(joinType=[InnerJoin], where=[(cs_item_sk = i_item_sk)], select=[cs_item_sk, cs_quantity, cs_list_price, cs_sales_price, cs_coupon_amt, cs_net_profit, cd_dep_count, c_birth_year, ca_county, ca_state, ca_country, i_item_sk, i_item_id], build=[right])
                           :- Exchange(distribution=[hash[cs_item_sk]])
                           :  +- Calc(select=[cs_item_sk, cs_quantity, cs_list_price, cs_sales_price, cs_coupon_amt, cs_net_profit, cd_dep_count, c_birth_year, ca_county, ca_state, ca_country])
                           :     +- HashJoin(joinType=[InnerJoin], where=[(cs_bill_customer_sk = c_customer_sk)], select=[cs_bill_customer_sk, cs_item_sk, cs_quantity, cs_list_price, cs_sales_price, cs_coupon_amt, cs_net_profit, cd_dep_count, c_customer_sk, c_birth_year, ca_county, ca_state, ca_country], build=[right])
                           :        :- Exchange(distribution=[hash[cs_bill_customer_sk]])
                           :        :  +- Calc(select=[cs_bill_customer_sk, cs_item_sk, cs_quantity, cs_list_price, cs_sales_price, cs_coupon_amt, cs_net_profit, cd_dep_count])
                           :        :     +- HashJoin(joinType=[InnerJoin], where=[(cs_bill_cdemo_sk = cd_demo_sk)], select=[cs_bill_customer_sk, cs_bill_cdemo_sk, cs_item_sk, cs_quantity, cs_list_price, cs_sales_price, cs_coupon_amt, cs_net_profit, cd_demo_sk, cd_dep_count], isBroadcast=[true], build=[right])
                           :        :        :- Calc(select=[cs_bill_customer_sk, cs_bill_cdemo_sk, cs_item_sk, cs_quantity, cs_list_price, cs_sales_price, cs_coupon_amt, cs_net_profit])
                           :        :        :  +- HashJoin(joinType=[InnerJoin], where=[(cs_sold_date_sk = d_date_sk)], select=[cs_bill_customer_sk, cs_bill_cdemo_sk, cs_item_sk, cs_quantity, cs_list_price, cs_sales_price, cs_coupon_amt, cs_net_profit, cs_sold_date_sk, d_date_sk], isBroadcast=[true], build=[right])
                           :        :        :     :- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, catalog_sales, project=[cs_bill_customer_sk, cs_bill_cdemo_sk, cs_item_sk, cs_quantity, cs_list_price, cs_sales_price, cs_coupon_amt, cs_net_profit, cs_sold_date_sk], project=[cs_bill_customer_sk, cs_bill_cdemo_sk, cs_item_sk, cs_quantity, cs_list_price, cs_sales_price, cs_coupon_amt, cs_net_profit, cs_sold_date_sk]]], fields=[cs_bill_customer_sk, cs_bill_cdemo_sk, cs_item_sk, cs_quantity, cs_list_price, cs_sales_price, cs_coupon_amt, cs_net_profit, cs_sold_date_sk], dpp=[d_date_sk])
                           :        :        :     +- Exchange(distribution=[broadcast])
                           :        :        :        +- Calc(select=[d_date_sk], where=[SEARCH(d_year, Sarg[2001])])
                           :        :        :           +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim, project=[d_date_sk, d_year]]], fields=[d_date_sk, d_year])
                           :        :        +- Exchange(distribution=[broadcast])
                           :        :           +- Calc(select=[cd_demo_sk, cd_dep_count], where=[(SEARCH(cd_gender, Sarg[_UTF-16LE'M']) AND SEARCH(cd_education_status, Sarg[_UTF-16LE'College']))])
                           :        :              +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, customer_demographics, project=[cd_demo_sk, cd_gender, cd_education_status, cd_dep_count]]], fields=[cd_demo_sk, cd_gender, cd_education_status, cd_dep_count])
                           :        +- Exchange(distribution=[hash[c_customer_sk]])
                           :           +- Calc(select=[c_customer_sk, c_birth_year, ca_county, ca_state, ca_country])
                           :              +- HashJoin(joinType=[InnerJoin], where=[(c_current_cdemo_sk = cd_demo_sk)], select=[c_customer_sk, c_current_cdemo_sk, c_birth_year, ca_county, ca_state, ca_country, cd_demo_sk], build=[right])
                           :                 :- Exchange(distribution=[hash[c_current_cdemo_sk]])
                           :                 :  +- Calc(select=[c_customer_sk, c_current_cdemo_sk, c_birth_year, ca_county, ca_state, ca_country])
                           :                 :     +- HashJoin(joinType=[InnerJoin], where=[(c_current_addr_sk = ca_address_sk)], select=[c_customer_sk, c_current_cdemo_sk, c_current_addr_sk, c_birth_year, ca_address_sk, ca_county, ca_state, ca_country], build=[right])
                           :                 :        :- Exchange(distribution=[hash[c_current_addr_sk]])
                           :                 :        :  +- Calc(select=[c_customer_sk, c_current_cdemo_sk, c_current_addr_sk, c_birth_year], where=[SEARCH(c_birth_month, Sarg[1, 4, 5, 9, 10, 12])])
                           :                 :        :     +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, customer, project=[c_customer_sk, c_current_cdemo_sk, c_current_addr_sk, c_birth_month, c_birth_year]]], fields=[c_customer_sk, c_current_cdemo_sk, c_current_addr_sk, c_birth_month, c_birth_year])
                           :                 :        +- Exchange(distribution=[hash[ca_address_sk]])
                           :                 :           +- Calc(select=[ca_address_sk, ca_county, ca_state, ca_country], where=[SEARCH(ca_state, Sarg[_UTF-16LE'AL', _UTF-16LE'MS', _UTF-16LE'NC', _UTF-16LE'ND', _UTF-16LE'OK', _UTF-16LE'TN', _UTF-16LE'WI'])])
                           :                 :              +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, customer_address, project=[ca_address_sk, ca_county, ca_state, ca_country]]], fields=[ca_address_sk, ca_county, ca_state, ca_country])
                           :                 +- Exchange(distribution=[hash[cd_demo_sk]])
                           :                    +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, customer_demographics, project=[cd_demo_sk]]], fields=[cd_demo_sk])
                           +- Exchange(distribution=[hash[i_item_sk]])
                              +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item, project=[i_item_sk, i_item_id]]], fields=[i_item_sk, i_item_id])
]]>
    </Resource>
  </TestCase>
