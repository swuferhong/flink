  <TestCase name="getExecPlan[q29]">
    <Resource name="sql">
      <![CDATA[/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

-- start query 1 in stream 0 using template query29.tpl and seed 2031708268
select   
     i_item_id
    ,i_item_desc
    ,s_store_id
    ,s_store_name
    ,sum(ss_quantity)        as store_sales_quantity
    ,sum(sr_return_quantity) as store_returns_quantity
    ,sum(cs_quantity)        as catalog_sales_quantity
 from
    store_sales
   ,store_returns
   ,catalog_sales
   ,date_dim             d1
   ,date_dim             d2
   ,date_dim             d3
   ,store
   ,item
 where
     d1.d_moy               = 4 
 and d1.d_year              = 1999
 and d1.d_date_sk           = ss_sold_date_sk
 and i_item_sk              = ss_item_sk
 and s_store_sk             = ss_store_sk
 and ss_customer_sk         = sr_customer_sk
 and ss_item_sk             = sr_item_sk
 and ss_ticket_number       = sr_ticket_number
 and sr_returned_date_sk    = d2.d_date_sk
 and d2.d_moy               between 4 and  4 + 3 
 and d2.d_year              = 1999
 and sr_customer_sk         = cs_bill_customer_sk
 and sr_item_sk             = cs_item_sk
 and cs_sold_date_sk        = d3.d_date_sk     
 and d3.d_year              in (1999,1999+1,1999+2)
 group by
    i_item_id
   ,i_item_desc
   ,s_store_id
   ,s_store_name
 order by
    i_item_id 
   ,i_item_desc
   ,s_store_id
   ,s_store_name
 limit 100

-- end query 1 in stream 0 using template query29.tpl
]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalSort(sort0=[$0], sort1=[$1], sort2=[$2], sort3=[$3], dir0=[ASC-nulls-first], dir1=[ASC-nulls-first], dir2=[ASC-nulls-first], dir3=[ASC-nulls-first], fetch=[100])
+- LogicalAggregate(group=[{0, 1, 2, 3}], store_sales_quantity=[SUM($4)], store_returns_quantity=[SUM($5)], catalog_sales_quantity=[SUM($6)])
   +- LogicalProject(i_item_id=[$191], i_item_desc=[$194], s_store_id=[$162], s_store_name=[$166], ss_quantity=[$9], sr_return_quantity=[$32], cs_quantity=[$60])
      +- LogicalFilter(condition=[AND(=($85, 4), =($83, 1999), =($77, $22), =($190, $1), =($161, $6), =($2, $25), =($1, $24), =($8, $31), =($42, $105), >=($113, 4), <=($113, +(4, 3)), =($111, 1999), =($25, $45), =($24, $57), =($76, $133), OR(=($139, 1999), =($139, +(1999, 1)), =($139, +(1999, 2))))])
         +- LogicalJoin(condition=[true], joinType=[inner])
            :- LogicalJoin(condition=[true], joinType=[inner])
            :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :  :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :  :  :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :  :  :  :  :- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store_sales]])
            :  :  :  :  :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store_returns]])
            :  :  :  :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, catalog_sales]])
            :  :  :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
            :  :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
            :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
            :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store]])
            +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
SortLimit(orderBy=[i_item_id ASC, i_item_desc ASC, s_store_id ASC, s_store_name ASC], offset=[0], fetch=[100], global=[true])
+- Exchange(distribution=[single])
   +- SortLimit(orderBy=[i_item_id ASC, i_item_desc ASC, s_store_id ASC, s_store_name ASC], offset=[0], fetch=[100], global=[false])
      +- HashAggregate(isMerge=[false], groupBy=[i_item_id, i_item_desc, s_store_id, s_store_name], select=[i_item_id, i_item_desc, s_store_id, s_store_name, SUM(ss_quantity) AS store_sales_quantity, SUM(sr_return_quantity) AS store_returns_quantity, SUM(cs_quantity) AS catalog_sales_quantity])
         +- Exchange(distribution=[hash[i_item_id, i_item_desc, s_store_id, s_store_name]])
            +- Calc(select=[i_item_id, i_item_desc, s_store_id, s_store_name, ss_quantity, sr_return_quantity, cs_quantity])
               +- HashJoin(joinType=[InnerJoin], where=[(s_store_sk = ss_store_sk)], select=[i_item_id, i_item_desc, cs_quantity, ss_store_sk, ss_quantity, sr_return_quantity, s_store_sk, s_store_id, s_store_name], isBroadcast=[true], build=[right])
                  :- Calc(select=[i_item_id, i_item_desc, cs_quantity, ss_store_sk, ss_quantity, sr_return_quantity])
                  :  +- HashJoin(joinType=[InnerJoin], where=[(cs_sold_date_sk = d_date_sk)], select=[i_item_id, i_item_desc, cs_quantity, cs_sold_date_sk, ss_store_sk, ss_quantity, sr_return_quantity, d_date_sk], isBroadcast=[true], build=[right])
                  :     :- Calc(select=[i_item_id, i_item_desc, cs_quantity, cs_sold_date_sk, ss_store_sk, ss_quantity, sr_return_quantity])
                  :     :  +- HashJoin(joinType=[InnerJoin], where=[(i_item_sk = ss_item_sk)], select=[i_item_sk, i_item_id, i_item_desc, cs_quantity, cs_sold_date_sk, ss_item_sk, ss_store_sk, ss_quantity, sr_return_quantity], build=[left])
                  :     :     :- Exchange(distribution=[hash[i_item_sk]])
                  :     :     :  +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item, project=[i_item_sk, i_item_id, i_item_desc]]], fields=[i_item_sk, i_item_id, i_item_desc])
                  :     :     +- Calc(select=[cs_quantity, cs_sold_date_sk, ss_item_sk, ss_store_sk, ss_quantity, sr_return_quantity])
                  :     :        +- HashJoin(joinType=[InnerJoin], where=[((cs_bill_customer_sk = ss_customer_sk) AND (cs_item_sk = ss_item_sk))], select=[cs_bill_customer_sk, cs_item_sk, cs_quantity, cs_sold_date_sk, ss_item_sk, ss_customer_sk, ss_store_sk, ss_quantity, sr_return_quantity], build=[right])
                  :     :           :- Exchange(distribution=[hash[cs_item_sk]])
                  :     :           :  +- Calc(select=[cs_bill_customer_sk, cs_item_sk, cs_quantity, cs_sold_date_sk], where=[cs_bill_customer_sk IS NOT NULL])
                  :     :           :     +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, catalog_sales, project=[cs_bill_customer_sk, cs_item_sk, cs_quantity, cs_sold_date_sk]]], fields=[cs_bill_customer_sk, cs_item_sk, cs_quantity, cs_sold_date_sk])
                  :     :           +- Calc(select=[ss_item_sk, ss_customer_sk, ss_store_sk, ss_quantity, sr_return_quantity])
                  :     :              +- HashJoin(joinType=[InnerJoin], where=[(d_date_sk = ss_sold_date_sk)], select=[ss_item_sk, ss_customer_sk, ss_store_sk, ss_quantity, ss_sold_date_sk, sr_return_quantity, d_date_sk], isBroadcast=[true], build=[right])
                  :     :                 :- Calc(select=[ss_item_sk, ss_customer_sk, ss_store_sk, ss_quantity, ss_sold_date_sk, sr_return_quantity])
                  :     :                 :  +- HashJoin(joinType=[InnerJoin], where=[((ss_customer_sk = sr_customer_sk) AND (ss_item_sk = sr_item_sk) AND (ss_ticket_number = sr_ticket_number))], select=[ss_item_sk, ss_customer_sk, ss_store_sk, ss_ticket_number, ss_quantity, ss_sold_date_sk, sr_item_sk, sr_customer_sk, sr_ticket_number, sr_return_quantity], build=[right])
                  :     :                 :     :- Exchange(distribution=[hash[ss_item_sk]])
                  :     :                 :     :  +- Calc(select=[ss_item_sk, ss_customer_sk, ss_store_sk, ss_ticket_number, ss_quantity, ss_sold_date_sk], where=[ss_customer_sk IS NOT NULL])
                  :     :                 :     :     +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store_sales, project=[ss_item_sk, ss_customer_sk, ss_store_sk, ss_ticket_number, ss_quantity, ss_sold_date_sk]]], fields=[ss_item_sk, ss_customer_sk, ss_store_sk, ss_ticket_number, ss_quantity, ss_sold_date_sk])
                  :     :                 :     +- Exchange(distribution=[hash[sr_item_sk]])
                  :     :                 :        +- Calc(select=[sr_item_sk, sr_customer_sk, sr_ticket_number, sr_return_quantity])
                  :     :                 :           +- HashJoin(joinType=[InnerJoin], where=[(sr_returned_date_sk = d_date_sk)], select=[sr_item_sk, sr_customer_sk, sr_ticket_number, sr_return_quantity, sr_returned_date_sk, d_date_sk], isBroadcast=[true], build=[right])
                  :     :                 :              :- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store_returns, project=[sr_item_sk, sr_customer_sk, sr_ticket_number, sr_return_quantity, sr_returned_date_sk], project=[sr_item_sk, sr_customer_sk, sr_ticket_number, sr_return_quantity, sr_returned_date_sk]]], fields=[sr_item_sk, sr_customer_sk, sr_ticket_number, sr_return_quantity, sr_returned_date_sk], dpp=[d_date_sk])
                  :     :                 :              +- Exchange(distribution=[broadcast])
                  :     :                 :                 +- Calc(select=[d_date_sk], where=[(SEARCH(d_moy, Sarg[[4..7]]) AND SEARCH(d_year, Sarg[1999]))])
                  :     :                 :                    +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim, project=[d_date_sk, d_year, d_moy]]], fields=[d_date_sk, d_year, d_moy])(reuse_id=[1])
                  :     :                 +- Exchange(distribution=[broadcast])
                  :     :                    +- Calc(select=[d_date_sk], where=[(SEARCH(d_moy, Sarg[4]) AND SEARCH(d_year, Sarg[1999]))])
                  :     :                       +- Reused(reference_id=[1])
                  :     +- Exchange(distribution=[broadcast])
                  :        +- Calc(select=[d_date_sk], where=[SEARCH(d_year, Sarg[1999, 2000, 2001])])
                  :           +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim, project=[d_date_sk, d_year]]], fields=[d_date_sk, d_year])
                  +- Exchange(distribution=[broadcast])
                     +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store, project=[s_store_sk, s_store_id, s_store_name]]], fields=[s_store_sk, s_store_id, s_store_name])
]]>
    </Resource>
  </TestCase>
