  <TestCase name="getExecPlan[q75]">
    <Resource name="sql">
      <![CDATA[/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

-- start query 1 in stream 0 using template query75.tpl and seed 1819994127
WITH all_sales AS (
 SELECT d_year
       ,i_brand_id
       ,i_class_id
       ,i_category_id
       ,i_manufact_id
       ,SUM(sales_cnt) AS sales_cnt
       ,SUM(sales_amt) AS sales_amt
 FROM (SELECT d_year
             ,i_brand_id
             ,i_class_id
             ,i_category_id
             ,i_manufact_id
             ,cs_quantity - COALESCE(cr_return_quantity,0) AS sales_cnt
             ,cs_ext_sales_price - COALESCE(cr_return_amount,0.0) AS sales_amt
       FROM catalog_sales JOIN item ON i_item_sk=cs_item_sk
                          JOIN date_dim ON d_date_sk=cs_sold_date_sk
                          LEFT JOIN catalog_returns ON (cs_order_number=cr_order_number 
                                                    AND cs_item_sk=cr_item_sk)
       WHERE i_category='Sports'
       UNION
       SELECT d_year
             ,i_brand_id
             ,i_class_id
             ,i_category_id
             ,i_manufact_id
             ,ss_quantity - COALESCE(sr_return_quantity,0) AS sales_cnt
             ,ss_ext_sales_price - COALESCE(sr_return_amt,0.0) AS sales_amt
       FROM store_sales JOIN item ON i_item_sk=ss_item_sk
                        JOIN date_dim ON d_date_sk=ss_sold_date_sk
                        LEFT JOIN store_returns ON (ss_ticket_number=sr_ticket_number 
                                                AND ss_item_sk=sr_item_sk)
       WHERE i_category='Sports'
       UNION
       SELECT d_year
             ,i_brand_id
             ,i_class_id
             ,i_category_id
             ,i_manufact_id
             ,ws_quantity - COALESCE(wr_return_quantity,0) AS sales_cnt
             ,ws_ext_sales_price - COALESCE(wr_return_amt,0.0) AS sales_amt
       FROM web_sales JOIN item ON i_item_sk=ws_item_sk
                      JOIN date_dim ON d_date_sk=ws_sold_date_sk
                      LEFT JOIN web_returns ON (ws_order_number=wr_order_number 
                                            AND ws_item_sk=wr_item_sk)
       WHERE i_category='Sports') sales_detail
 GROUP BY d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id)
 SELECT  prev_yr.d_year AS prev_year
                          ,curr_yr.d_year AS`year`
                          ,curr_yr.i_brand_id
                          ,curr_yr.i_class_id
                          ,curr_yr.i_category_id
                          ,curr_yr.i_manufact_id
                          ,prev_yr.sales_cnt AS prev_yr_cnt
                          ,curr_yr.sales_cnt AS curr_yr_cnt
                          ,curr_yr.sales_cnt-prev_yr.sales_cnt AS sales_cnt_diff
                          ,curr_yr.sales_amt-prev_yr.sales_amt AS sales_amt_diff
 FROM all_sales curr_yr, all_sales prev_yr
 WHERE curr_yr.i_brand_id=prev_yr.i_brand_id
   AND curr_yr.i_class_id=prev_yr.i_class_id
   AND curr_yr.i_category_id=prev_yr.i_category_id
   AND curr_yr.i_manufact_id=prev_yr.i_manufact_id
   AND curr_yr.d_year=2002
   AND prev_yr.d_year=2002-1
   AND CAST(curr_yr.sales_cnt AS DECIMAL(17,2))/CAST(prev_yr.sales_cnt AS DECIMAL(17,2))<0.9
 ORDER BY sales_cnt_diff
 limit 100

-- end query 1 in stream 0 using template query75.tpl
]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalSort(sort0=[$8], dir0=[ASC-nulls-first], fetch=[100])
+- LogicalProject(prev_year=[$7], year=[$0], i_brand_id=[$1], i_class_id=[$2], i_category_id=[$3], i_manufact_id=[$4], prev_yr_cnt=[$12], curr_yr_cnt=[$5], sales_cnt_diff=[-($5, $12)], sales_amt_diff=[-($6, $13)])
   +- LogicalFilter(condition=[AND(=($1, $8), =($2, $9), =($3, $10), =($4, $11), =($0, 2002), =($7, -(2002, 1)), <(/(CAST($5):DECIMAL(17, 2), CAST($12):DECIMAL(17, 2)), 0.9:DECIMAL(2, 1)))])
      +- LogicalJoin(condition=[true], joinType=[inner])
         :- LogicalAggregate(group=[{0, 1, 2, 3, 4}], sales_cnt=[SUM($5)], sales_amt=[SUM($6)])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalUnion(all=[false])
         :     :  :- LogicalProject(d_year=[$62], i_brand_id=[$41], i_class_id=[$43], i_category_id=[$45], i_manufact_id=[$47], sales_cnt=[-($17, COALESCE($100, 0))], sales_amt=[-($22, COALESCE($101, 0.0:DOUBLE))])
         :     :  :  +- LogicalFilter(condition=[=($46, _UTF-16LE'Sports')])
         :     :  :     +- LogicalJoin(condition=[AND(=($16, $99), =($14, $85))], joinType=[left])
         :     :  :        :- LogicalJoin(condition=[=($56, $33)], joinType=[inner])
         :     :  :        :  :- LogicalJoin(condition=[=($34, $14)], joinType=[inner])
         :     :  :        :  :  :- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, catalog_sales]])
         :     :  :        :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item]])
         :     :  :        :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
         :     :  :        +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, catalog_returns]])
         :     :  +- LogicalProject(d_year=[$51], i_brand_id=[$30], i_class_id=[$32], i_category_id=[$34], i_manufact_id=[$36], sales_cnt=[-($9, COALESCE($82, 0))], sales_amt=[-($14, COALESCE($83, 0.0:DOUBLE))])
         :     :     +- LogicalFilter(condition=[=($35, _UTF-16LE'Sports')])
         :     :        +- LogicalJoin(condition=[AND(=($8, $81), =($1, $74))], joinType=[left])
         :     :           :- LogicalJoin(condition=[=($45, $22)], joinType=[inner])
         :     :           :  :- LogicalJoin(condition=[=($23, $1)], joinType=[inner])
         :     :           :  :  :- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store_sales]])
         :     :           :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item]])
         :     :           :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
         :     :           +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store_returns]])
         :     +- LogicalProject(d_year=[$62], i_brand_id=[$41], i_class_id=[$43], i_category_id=[$45], i_manufact_id=[$47], sales_cnt=[-($17, COALESCE($97, 0))], sales_amt=[-($22, COALESCE($98, 0.0:DOUBLE))])
         :        +- LogicalFilter(condition=[=($46, _UTF-16LE'Sports')])
         :           +- LogicalJoin(condition=[AND(=($16, $96), =($2, $85))], joinType=[left])
         :              :- LogicalJoin(condition=[=($56, $33)], joinType=[inner])
         :              :  :- LogicalJoin(condition=[=($34, $2)], joinType=[inner])
         :              :  :  :- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, web_sales]])
         :              :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item]])
         :              :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
         :              +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, web_returns]])
         +- LogicalAggregate(group=[{0, 1, 2, 3, 4}], sales_cnt=[SUM($5)], sales_amt=[SUM($6)])
            +- LogicalUnion(all=[false])
               :- LogicalUnion(all=[false])
               :  :- LogicalProject(d_year=[$62], i_brand_id=[$41], i_class_id=[$43], i_category_id=[$45], i_manufact_id=[$47], sales_cnt=[-($17, COALESCE($100, 0))], sales_amt=[-($22, COALESCE($101, 0.0:DOUBLE))])
               :  :  +- LogicalFilter(condition=[=($46, _UTF-16LE'Sports')])
               :  :     +- LogicalJoin(condition=[AND(=($16, $99), =($14, $85))], joinType=[left])
               :  :        :- LogicalJoin(condition=[=($56, $33)], joinType=[inner])
               :  :        :  :- LogicalJoin(condition=[=($34, $14)], joinType=[inner])
               :  :        :  :  :- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, catalog_sales]])
               :  :        :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item]])
               :  :        :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
               :  :        +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, catalog_returns]])
               :  +- LogicalProject(d_year=[$51], i_brand_id=[$30], i_class_id=[$32], i_category_id=[$34], i_manufact_id=[$36], sales_cnt=[-($9, COALESCE($82, 0))], sales_amt=[-($14, COALESCE($83, 0.0:DOUBLE))])
               :     +- LogicalFilter(condition=[=($35, _UTF-16LE'Sports')])
               :        +- LogicalJoin(condition=[AND(=($8, $81), =($1, $74))], joinType=[left])
               :           :- LogicalJoin(condition=[=($45, $22)], joinType=[inner])
               :           :  :- LogicalJoin(condition=[=($23, $1)], joinType=[inner])
               :           :  :  :- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store_sales]])
               :           :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item]])
               :           :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
               :           +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store_returns]])
               +- LogicalProject(d_year=[$62], i_brand_id=[$41], i_class_id=[$43], i_category_id=[$45], i_manufact_id=[$47], sales_cnt=[-($17, COALESCE($97, 0))], sales_amt=[-($22, COALESCE($98, 0.0:DOUBLE))])
                  +- LogicalFilter(condition=[=($46, _UTF-16LE'Sports')])
                     +- LogicalJoin(condition=[AND(=($16, $96), =($2, $85))], joinType=[left])
                        :- LogicalJoin(condition=[=($56, $33)], joinType=[inner])
                        :  :- LogicalJoin(condition=[=($34, $2)], joinType=[inner])
                        :  :  :- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, web_sales]])
                        :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item]])
                        :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
                        +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, web_returns]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
SortLimit(orderBy=[sales_cnt_diff ASC], offset=[0], fetch=[100], global=[true])
+- Exchange(distribution=[single])
   +- SortLimit(orderBy=[sales_cnt_diff ASC], offset=[0], fetch=[100], global=[false])
      +- Calc(select=[CAST(2001 AS INTEGER) AS prev_year, CAST(2002 AS INTEGER) AS year, i_brand_id, i_class_id, i_category_id, i_manufact_id, sales_cnt0 AS prev_yr_cnt, sales_cnt AS curr_yr_cnt, (sales_cnt - sales_cnt0) AS sales_cnt_diff, (sales_amt - sales_amt0) AS sales_amt_diff])
         +- HashJoin(joinType=[InnerJoin], where=[((i_brand_id = i_brand_id0) AND (i_class_id = i_class_id0) AND (i_category_id = i_category_id0) AND (i_manufact_id = i_manufact_id0) AND ((CAST(sales_cnt AS DECIMAL(17, 2)) / CAST(sales_cnt0 AS DECIMAL(17, 2))) < 0.9))], select=[i_brand_id, i_class_id, i_category_id, i_manufact_id, sales_cnt, sales_amt, i_brand_id0, i_class_id0, i_category_id0, i_manufact_id0, sales_cnt0, sales_amt0], isBroadcast=[true], build=[right])
            :- Calc(select=[i_brand_id, i_class_id, i_category_id, i_manufact_id, sales_cnt, sales_amt])
            :  +- HashAggregate(isMerge=[true], groupBy=[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id], select=[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, Final_SUM(sum$0) AS sales_cnt, Final_SUM(sum$1) AS sales_amt])
            :     +- Exchange(distribution=[hash[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id]])
            :        +- LocalHashAggregate(groupBy=[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id], select=[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, Partial_SUM(sales_cnt) AS sum$0, Partial_SUM(sales_amt) AS sum$1])
            :           +- HashAggregate(isMerge=[false], groupBy=[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, sales_cnt, sales_amt], select=[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, sales_cnt, sales_amt])
            :              +- Exchange(distribution=[hash[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, sales_cnt, sales_amt]])
            :                 +- Union(all=[true], union=[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, sales_cnt, sales_amt])
            :                    :- Union(all=[true], union=[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, sales_cnt, sales_amt])
            :                    :  :- Calc(select=[CAST(2002 AS INTEGER) AS d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, (cs_quantity - COALESCE(cr_return_quantity, 0)) AS sales_cnt, (cs_ext_sales_price - COALESCE(cr_return_amount, 0.0)) AS sales_amt])
            :                    :  :  +- HashJoin(joinType=[RightOuterJoin], where=[((cs_order_number = cr_order_number) AND (cs_item_sk = cr_item_sk))], select=[cr_item_sk, cr_order_number, cr_return_quantity, cr_return_amount, cs_item_sk, cs_order_number, cs_quantity, cs_ext_sales_price, i_brand_id, i_class_id, i_category_id, i_manufact_id], build=[right])
            :                    :  :     :- Exchange(distribution=[hash[cr_order_number, cr_item_sk]])
            :                    :  :     :  +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, catalog_returns, project=[cr_item_sk, cr_order_number, cr_return_quantity, cr_return_amount]]], fields=[cr_item_sk, cr_order_number, cr_return_quantity, cr_return_amount])(reuse_id=[3])
            :                    :  :     +- Exchange(distribution=[hash[cs_order_number, cs_item_sk]])
            :                    :  :        +- Calc(select=[cs_item_sk, cs_order_number, cs_quantity, cs_ext_sales_price, i_brand_id, i_class_id, i_category_id, i_manufact_id])
            :                    :  :           +- HashJoin(joinType=[InnerJoin], where=[(i_item_sk = cs_item_sk)], select=[cs_item_sk, cs_order_number, cs_quantity, cs_ext_sales_price, i_item_sk, i_brand_id, i_class_id, i_category_id, i_manufact_id], isBroadcast=[true], build=[right])
            :                    :  :              :- Calc(select=[cs_item_sk, cs_order_number, cs_quantity, cs_ext_sales_price])
            :                    :  :              :  +- HashJoin(joinType=[InnerJoin], where=[(d_date_sk = cs_sold_date_sk)], select=[cs_item_sk, cs_order_number, cs_quantity, cs_ext_sales_price, cs_sold_date_sk, d_date_sk], isBroadcast=[true], build=[right])
            :                    :  :              :     :- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, catalog_sales, project=[cs_item_sk, cs_order_number, cs_quantity, cs_ext_sales_price, cs_sold_date_sk], project=[cs_item_sk, cs_order_number, cs_quantity, cs_ext_sales_price, cs_sold_date_sk]]], fields=[cs_item_sk, cs_order_number, cs_quantity, cs_ext_sales_price, cs_sold_date_sk], dpp=[d_date_sk])(reuse_id=[4])
            :                    :  :              :     +- Exchange(distribution=[broadcast])(reuse_id=[1])
            :                    :  :              :        +- Calc(select=[d_date_sk], where=[(d_year = 2002)])
            :                    :  :              :           +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim, project=[d_date_sk, d_year]]], fields=[d_date_sk, d_year])(reuse_id=[5])
            :                    :  :              +- Exchange(distribution=[broadcast])(reuse_id=[2])
            :                    :  :                 +- Calc(select=[i_item_sk, i_brand_id, i_class_id, i_category_id, i_manufact_id], where=[(i_category = 'Sports')])
            :                    :  :                    +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item, project=[i_item_sk, i_brand_id, i_class_id, i_category_id, i_category, i_manufact_id]]], fields=[i_item_sk, i_brand_id, i_class_id, i_category_id, i_category, i_manufact_id])
            :                    :  +- Calc(select=[CAST(2002 AS INTEGER) AS d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, (ss_quantity - COALESCE(sr_return_quantity, 0)) AS sales_cnt, (ss_ext_sales_price - COALESCE(sr_return_amt, 0.0)) AS sales_amt])
            :                    :     +- HashJoin(joinType=[RightOuterJoin], where=[((ss_ticket_number = sr_ticket_number) AND (ss_item_sk = sr_item_sk))], select=[sr_item_sk, sr_ticket_number, sr_return_quantity, sr_return_amt, ss_item_sk, ss_ticket_number, ss_quantity, ss_ext_sales_price, i_brand_id, i_class_id, i_category_id, i_manufact_id], build=[right])
            :                    :        :- Exchange(distribution=[hash[sr_ticket_number, sr_item_sk]])
            :                    :        :  +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store_returns, project=[sr_item_sk, sr_ticket_number, sr_return_quantity, sr_return_amt]]], fields=[sr_item_sk, sr_ticket_number, sr_return_quantity, sr_return_amt])(reuse_id=[6])
            :                    :        +- Exchange(distribution=[hash[ss_ticket_number, ss_item_sk]])
            :                    :           +- Calc(select=[ss_item_sk, ss_ticket_number, ss_quantity, ss_ext_sales_price, i_brand_id, i_class_id, i_category_id, i_manufact_id])
            :                    :              +- HashJoin(joinType=[InnerJoin], where=[(i_item_sk = ss_item_sk)], select=[ss_item_sk, ss_ticket_number, ss_quantity, ss_ext_sales_price, i_item_sk, i_brand_id, i_class_id, i_category_id, i_manufact_id], isBroadcast=[true], build=[right])
            :                    :                 :- Calc(select=[ss_item_sk, ss_ticket_number, ss_quantity, ss_ext_sales_price])
            :                    :                 :  +- HashJoin(joinType=[InnerJoin], where=[(d_date_sk = ss_sold_date_sk)], select=[ss_item_sk, ss_ticket_number, ss_quantity, ss_ext_sales_price, ss_sold_date_sk, d_date_sk], isBroadcast=[true], build=[right])
            :                    :                 :     :- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store_sales, project=[ss_item_sk, ss_ticket_number, ss_quantity, ss_ext_sales_price, ss_sold_date_sk], project=[ss_item_sk, ss_ticket_number, ss_quantity, ss_ext_sales_price, ss_sold_date_sk]]], fields=[ss_item_sk, ss_ticket_number, ss_quantity, ss_ext_sales_price, ss_sold_date_sk], dpp=[d_date_sk])(reuse_id=[7])
            :                    :                 :     +- Reused(reference_id=[1])
            :                    :                 +- Reused(reference_id=[2])
            :                    +- Calc(select=[CAST(2002 AS INTEGER) AS d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, (ws_quantity - COALESCE(wr_return_quantity, 0)) AS sales_cnt, (ws_ext_sales_price - COALESCE(wr_return_amt, 0.0)) AS sales_amt])
            :                       +- HashJoin(joinType=[RightOuterJoin], where=[((ws_order_number = wr_order_number) AND (ws_item_sk = wr_item_sk))], select=[wr_item_sk, wr_order_number, wr_return_quantity, wr_return_amt, ws_item_sk, ws_order_number, ws_quantity, ws_ext_sales_price, i_brand_id, i_class_id, i_category_id, i_manufact_id], build=[right])
            :                          :- Exchange(distribution=[hash[wr_order_number, wr_item_sk]])
            :                          :  +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, web_returns, project=[wr_item_sk, wr_order_number, wr_return_quantity, wr_return_amt]]], fields=[wr_item_sk, wr_order_number, wr_return_quantity, wr_return_amt])(reuse_id=[9])
            :                          +- Exchange(distribution=[hash[ws_order_number, ws_item_sk]])
            :                             +- Calc(select=[ws_item_sk, ws_order_number, ws_quantity, ws_ext_sales_price, i_brand_id, i_class_id, i_category_id, i_manufact_id])
            :                                +- HashJoin(joinType=[InnerJoin], where=[(i_item_sk = ws_item_sk)], select=[ws_item_sk, ws_order_number, ws_quantity, ws_ext_sales_price, i_item_sk, i_brand_id, i_class_id, i_category_id, i_manufact_id], isBroadcast=[true], build=[right])
            :                                   :- Calc(select=[ws_item_sk, ws_order_number, ws_quantity, ws_ext_sales_price])
            :                                   :  +- HashJoin(joinType=[InnerJoin], where=[(d_date_sk = ws_sold_date_sk)], select=[ws_item_sk, ws_order_number, ws_quantity, ws_ext_sales_price, ws_sold_date_sk, d_date_sk], isBroadcast=[true], build=[right])
            :                                   :     :- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, web_sales, project=[ws_item_sk, ws_order_number, ws_quantity, ws_ext_sales_price, ws_sold_date_sk], project=[ws_item_sk, ws_order_number, ws_quantity, ws_ext_sales_price, ws_sold_date_sk]]], fields=[ws_item_sk, ws_order_number, ws_quantity, ws_ext_sales_price, ws_sold_date_sk], dpp=[d_date_sk])(reuse_id=[10])
            :                                   :     +- Reused(reference_id=[1])
            :                                   +- Reused(reference_id=[2])
            +- Exchange(distribution=[broadcast])
               +- Calc(select=[i_brand_id, i_class_id, i_category_id, i_manufact_id, sales_cnt, sales_amt])
                  +- HashAggregate(isMerge=[true], groupBy=[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id], select=[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, Final_SUM(sum$0) AS sales_cnt, Final_SUM(sum$1) AS sales_amt])
                     +- Exchange(distribution=[hash[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id]])
                        +- LocalHashAggregate(groupBy=[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id], select=[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, Partial_SUM(sales_cnt) AS sum$0, Partial_SUM(sales_amt) AS sum$1])
                           +- HashAggregate(isMerge=[false], groupBy=[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, sales_cnt, sales_amt], select=[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, sales_cnt, sales_amt])
                              +- Exchange(distribution=[hash[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, sales_cnt, sales_amt]])
                                 +- Union(all=[true], union=[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, sales_cnt, sales_amt])
                                    :- Union(all=[true], union=[d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, sales_cnt, sales_amt])
                                    :  :- Calc(select=[CAST(2001 AS INTEGER) AS d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, (cs_quantity - COALESCE(cr_return_quantity, 0)) AS sales_cnt, (cs_ext_sales_price - COALESCE(cr_return_amount, 0.0)) AS sales_amt])
                                    :  :  +- HashJoin(joinType=[RightOuterJoin], where=[((cs_order_number = cr_order_number) AND (cs_item_sk = cr_item_sk))], select=[cr_item_sk, cr_order_number, cr_return_quantity, cr_return_amount, cs_item_sk, cs_order_number, cs_quantity, cs_ext_sales_price, i_brand_id, i_class_id, i_category_id, i_manufact_id], build=[right])
                                    :  :     :- Exchange(distribution=[hash[cr_order_number, cr_item_sk]])
                                    :  :     :  +- Reused(reference_id=[3])
                                    :  :     +- Exchange(distribution=[hash[cs_order_number, cs_item_sk]])
                                    :  :        +- Calc(select=[cs_item_sk, cs_order_number, cs_quantity, cs_ext_sales_price, i_brand_id, i_class_id, i_category_id, i_manufact_id])
                                    :  :           +- HashJoin(joinType=[InnerJoin], where=[(i_item_sk = cs_item_sk)], select=[cs_item_sk, cs_order_number, cs_quantity, cs_ext_sales_price, i_item_sk, i_brand_id, i_class_id, i_category_id, i_manufact_id], isBroadcast=[true], build=[right])
                                    :  :              :- Calc(select=[cs_item_sk, cs_order_number, cs_quantity, cs_ext_sales_price])
                                    :  :              :  +- HashJoin(joinType=[InnerJoin], where=[(d_date_sk = cs_sold_date_sk)], select=[cs_item_sk, cs_order_number, cs_quantity, cs_ext_sales_price, cs_sold_date_sk, d_date_sk], isBroadcast=[true], build=[right])
                                    :  :              :     :- Reused(reference_id=[4])
                                    :  :              :     +- Exchange(distribution=[broadcast])(reuse_id=[8])
                                    :  :              :        +- Calc(select=[d_date_sk], where=[(d_year = 2001)])
                                    :  :              :           +- Reused(reference_id=[5])
                                    :  :              +- Reused(reference_id=[2])
                                    :  +- Calc(select=[CAST(2001 AS INTEGER) AS d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, (ss_quantity - COALESCE(sr_return_quantity, 0)) AS sales_cnt, (ss_ext_sales_price - COALESCE(sr_return_amt, 0.0)) AS sales_amt])
                                    :     +- HashJoin(joinType=[RightOuterJoin], where=[((ss_ticket_number = sr_ticket_number) AND (ss_item_sk = sr_item_sk))], select=[sr_item_sk, sr_ticket_number, sr_return_quantity, sr_return_amt, ss_item_sk, ss_ticket_number, ss_quantity, ss_ext_sales_price, i_brand_id, i_class_id, i_category_id, i_manufact_id], build=[right])
                                    :        :- Exchange(distribution=[hash[sr_ticket_number, sr_item_sk]])
                                    :        :  +- Reused(reference_id=[6])
                                    :        +- Exchange(distribution=[hash[ss_ticket_number, ss_item_sk]])
                                    :           +- Calc(select=[ss_item_sk, ss_ticket_number, ss_quantity, ss_ext_sales_price, i_brand_id, i_class_id, i_category_id, i_manufact_id])
                                    :              +- HashJoin(joinType=[InnerJoin], where=[(i_item_sk = ss_item_sk)], select=[ss_item_sk, ss_ticket_number, ss_quantity, ss_ext_sales_price, i_item_sk, i_brand_id, i_class_id, i_category_id, i_manufact_id], isBroadcast=[true], build=[right])
                                    :                 :- Calc(select=[ss_item_sk, ss_ticket_number, ss_quantity, ss_ext_sales_price])
                                    :                 :  +- HashJoin(joinType=[InnerJoin], where=[(d_date_sk = ss_sold_date_sk)], select=[ss_item_sk, ss_ticket_number, ss_quantity, ss_ext_sales_price, ss_sold_date_sk, d_date_sk], isBroadcast=[true], build=[right])
                                    :                 :     :- Reused(reference_id=[7])
                                    :                 :     +- Reused(reference_id=[8])
                                    :                 +- Reused(reference_id=[2])
                                    +- Calc(select=[CAST(2001 AS INTEGER) AS d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, (ws_quantity - COALESCE(wr_return_quantity, 0)) AS sales_cnt, (ws_ext_sales_price - COALESCE(wr_return_amt, 0.0)) AS sales_amt])
                                       +- HashJoin(joinType=[RightOuterJoin], where=[((ws_order_number = wr_order_number) AND (ws_item_sk = wr_item_sk))], select=[wr_item_sk, wr_order_number, wr_return_quantity, wr_return_amt, ws_item_sk, ws_order_number, ws_quantity, ws_ext_sales_price, i_brand_id, i_class_id, i_category_id, i_manufact_id], build=[right])
                                          :- Exchange(distribution=[hash[wr_order_number, wr_item_sk]])
                                          :  +- Reused(reference_id=[9])
                                          +- Exchange(distribution=[hash[ws_order_number, ws_item_sk]])
                                             +- Calc(select=[ws_item_sk, ws_order_number, ws_quantity, ws_ext_sales_price, i_brand_id, i_class_id, i_category_id, i_manufact_id])
                                                +- HashJoin(joinType=[InnerJoin], where=[(i_item_sk = ws_item_sk)], select=[ws_item_sk, ws_order_number, ws_quantity, ws_ext_sales_price, i_item_sk, i_brand_id, i_class_id, i_category_id, i_manufact_id], isBroadcast=[true], build=[right])
                                                   :- Calc(select=[ws_item_sk, ws_order_number, ws_quantity, ws_ext_sales_price])
                                                   :  +- HashJoin(joinType=[InnerJoin], where=[(d_date_sk = ws_sold_date_sk)], select=[ws_item_sk, ws_order_number, ws_quantity, ws_ext_sales_price, ws_sold_date_sk, d_date_sk], isBroadcast=[true], build=[right])
                                                   :     :- Reused(reference_id=[10])
                                                   :     +- Reused(reference_id=[8])
                                                   +- Reused(reference_id=[2])
]]>
    </Resource>
  </TestCase>
