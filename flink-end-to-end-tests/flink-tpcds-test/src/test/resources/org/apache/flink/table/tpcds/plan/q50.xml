  <TestCase name="getExecPlan[q50]">
    <Resource name="sql">
      <![CDATA[/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

-- start query 1 in stream 0 using template query50.tpl and seed 1819994127
select  
   s_store_name
  ,s_company_id
  ,s_street_number
  ,s_street_name
  ,s_street_type
  ,s_suite_number
  ,s_city
  ,s_county
  ,s_state
  ,s_zip
  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk <= 30 ) then 1 else 0 end)  as `30 days` 
  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 30) and 
                 (sr_returned_date_sk - ss_sold_date_sk <= 60) then 1 else 0 end )  as `31-60 days` 
  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 60) and 
                 (sr_returned_date_sk - ss_sold_date_sk <= 90) then 1 else 0 end)  as `61-90 days` 
  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 90) and
                 (sr_returned_date_sk - ss_sold_date_sk <= 120) then 1 else 0 end)  as `91-120 days` 
  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk  > 120) then 1 else 0 end)  as `>120 days` 
from
   store_sales
  ,store_returns
  ,store
  ,date_dim d1
  ,date_dim d2
where
    d2.d_year = 2000
and d2.d_moy  = 9
and ss_ticket_number = sr_ticket_number
and ss_item_sk = sr_item_sk
and ss_sold_date_sk   = d1.d_date_sk
and sr_returned_date_sk   = d2.d_date_sk
and ss_customer_sk = sr_customer_sk
and ss_store_sk = s_store_sk
group by
   s_store_name
  ,s_company_id
  ,s_street_number
  ,s_street_name
  ,s_street_type
  ,s_suite_number
  ,s_city
  ,s_county
  ,s_state
  ,s_zip
order by s_store_name
        ,s_company_id
        ,s_street_number
        ,s_street_name
        ,s_street_type
        ,s_suite_number
        ,s_city
        ,s_county
        ,s_state
        ,s_zip
limit 100

-- end query 1 in stream 0 using template query50.tpl
]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalSort(sort0=[$0], sort1=[$1], sort2=[$2], sort3=[$3], sort4=[$4], sort5=[$5], sort6=[$6], sort7=[$7], sort8=[$8], sort9=[$9], dir0=[ASC-nulls-first], dir1=[ASC-nulls-first], dir2=[ASC-nulls-first], dir3=[ASC-nulls-first], dir4=[ASC-nulls-first], dir5=[ASC-nulls-first], dir6=[ASC-nulls-first], dir7=[ASC-nulls-first], dir8=[ASC-nulls-first], dir9=[ASC-nulls-first], fetch=[100])
+- LogicalAggregate(group=[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}], 30 days=[SUM($10)], 31-60 days=[SUM($11)], 61-90 days=[SUM($12)], 91-120 days=[SUM($13)], >120 days=[SUM($14)])
   +- LogicalProject(s_store_name=[$48], s_company_id=[$59], s_street_number=[$61], s_street_name=[$62], s_street_type=[$63], s_suite_number=[$64], s_city=[$65], s_county=[$66], s_state=[$67], s_zip=[$68], $f10=[CASE(<=(-($42, $22), 30), 1, 0)], $f11=[CASE(AND(>(-($42, $22), 30), <=(-($42, $22), 60)), 1, 0)], $f12=[CASE(AND(>(-($42, $22), 60), <=(-($42, $22), 90)), 1, 0)], $f13=[CASE(AND(>(-($42, $22), 90), <=(-($42, $22), 120)), 1, 0)], $f14=[CASE(>(-($42, $22), 120), 1, 0)])
      +- LogicalFilter(condition=[AND(=($106, 2000), =($108, 9), =($8, $31), =($1, $24), =($22, $72), =($42, $100), =($2, $25), =($6, $43))])
         +- LogicalJoin(condition=[true], joinType=[inner])
            :- LogicalJoin(condition=[true], joinType=[inner])
            :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :  :- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store_sales]])
            :  :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store_returns]])
            :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store]])
            :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
            +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
SortLimit(orderBy=[s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC], offset=[0], fetch=[100], global=[true])
+- Exchange(distribution=[single])
   +- SortLimit(orderBy=[s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC], offset=[0], fetch=[100], global=[false])
      +- HashAggregate(isMerge=[true], groupBy=[s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip], select=[s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Final_SUM(sum$0) AS 30 days, Final_SUM(sum$1) AS 31-60 days, Final_SUM(sum$2) AS 61-90 days, Final_SUM(sum$3) AS 91-120 days, Final_SUM(sum$4) AS >120 days])
         +- Exchange(distribution=[hash[s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip]])
            +- LocalHashAggregate(groupBy=[s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip], select=[s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Partial_SUM($f10) AS sum$0, Partial_SUM($f11) AS sum$1, Partial_SUM($f12) AS sum$2, Partial_SUM($f13) AS sum$3, Partial_SUM($f14) AS sum$4])
               +- Calc(select=[s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, CASE(((sr_returned_date_sk - ss_sold_date_sk) <= 30), 1, 0) AS $f10, CASE((((sr_returned_date_sk - ss_sold_date_sk) > 30) AND ((sr_returned_date_sk - ss_sold_date_sk) <= 60)), 1, 0) AS $f11, CASE((((sr_returned_date_sk - ss_sold_date_sk) > 60) AND ((sr_returned_date_sk - ss_sold_date_sk) <= 90)), 1, 0) AS $f12, CASE((((sr_returned_date_sk - ss_sold_date_sk) > 90) AND ((sr_returned_date_sk - ss_sold_date_sk) <= 120)), 1, 0) AS $f13, CASE(((sr_returned_date_sk - ss_sold_date_sk) > 120), 1, 0) AS $f14])
                  +- HashJoin(joinType=[InnerJoin], where=[(ss_store_sk = s_store_sk)], select=[ss_store_sk, ss_sold_date_sk, sr_returned_date_sk, s_store_sk, s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip], isBroadcast=[true], build=[right])
                     :- Calc(select=[ss_store_sk, ss_sold_date_sk, sr_returned_date_sk])
                     :  +- HashJoin(joinType=[InnerJoin], where=[(ss_sold_date_sk = d_date_sk)], select=[ss_store_sk, ss_sold_date_sk, sr_returned_date_sk, d_date_sk], isBroadcast=[true], build=[right])
                     :     :- Calc(select=[ss_store_sk, ss_sold_date_sk, sr_returned_date_sk])
                     :     :  +- HashJoin(joinType=[InnerJoin], where=[((ss_ticket_number = sr_ticket_number) AND (ss_item_sk = sr_item_sk) AND (ss_customer_sk = sr_customer_sk))], select=[ss_item_sk, ss_customer_sk, ss_store_sk, ss_ticket_number, ss_sold_date_sk, sr_item_sk, sr_customer_sk, sr_ticket_number, sr_returned_date_sk], build=[right])
                     :     :     :- Exchange(distribution=[hash[ss_ticket_number, ss_item_sk, ss_customer_sk]])
                     :     :     :  +- Calc(select=[ss_item_sk, ss_customer_sk, ss_store_sk, ss_ticket_number, ss_sold_date_sk], where=[ss_customer_sk IS NOT NULL])
                     :     :     :     +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store_sales, project=[ss_item_sk, ss_customer_sk, ss_store_sk, ss_ticket_number, ss_sold_date_sk]]], fields=[ss_item_sk, ss_customer_sk, ss_store_sk, ss_ticket_number, ss_sold_date_sk])
                     :     :     +- Exchange(distribution=[hash[sr_ticket_number, sr_item_sk, sr_customer_sk]])
                     :     :        +- Calc(select=[sr_item_sk, sr_customer_sk, sr_ticket_number, sr_returned_date_sk])
                     :     :           +- HashJoin(joinType=[InnerJoin], where=[(sr_returned_date_sk = d_date_sk)], select=[sr_item_sk, sr_customer_sk, sr_ticket_number, sr_returned_date_sk, d_date_sk], isBroadcast=[true], build=[right])
                     :     :              :- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store_returns, project=[sr_item_sk, sr_customer_sk, sr_ticket_number, sr_returned_date_sk], project=[sr_item_sk, sr_customer_sk, sr_ticket_number, sr_returned_date_sk]]], fields=[sr_item_sk, sr_customer_sk, sr_ticket_number, sr_returned_date_sk], dpp=[d_date_sk])
                     :     :              +- Exchange(distribution=[broadcast])
                     :     :                 +- Calc(select=[d_date_sk], where=[((d_year = 2000) AND (d_moy = 9))])
                     :     :                    +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim, project=[d_date_sk, d_year, d_moy]]], fields=[d_date_sk, d_year, d_moy])
                     :     +- Exchange(distribution=[broadcast])
                     :        +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim, project=[d_date_sk]]], fields=[d_date_sk])
                     +- Exchange(distribution=[broadcast])
                        +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store, project=[s_store_sk, s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip]]], fields=[s_store_sk, s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip])
]]>
    </Resource>
  </TestCase>
