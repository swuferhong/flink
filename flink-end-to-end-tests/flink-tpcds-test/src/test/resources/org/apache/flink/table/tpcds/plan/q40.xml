  <TestCase name="getExecPlan[q40]">
    <Resource name="sql">
      <![CDATA[/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

-- start query 1 in stream 0 using template query40.tpl and seed 1819994127
select  
   w_state
  ,i_item_id
  ,sum(case when (cast(d_date as date) < cast ('1998-04-08' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before
  ,sum(case when (cast(d_date as date) >= cast ('1998-04-08' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after
 from
   catalog_sales left outer join catalog_returns on
       (cs_order_number = cr_order_number 
        and cs_item_sk = cr_item_sk)
  ,warehouse 
  ,item
  ,date_dim
 where
     i_current_price between 0.99 and 1.49
 and i_item_sk          = cs_item_sk
 and cs_warehouse_sk    = w_warehouse_sk 
 and cs_sold_date_sk    = d_date_sk
 and d_date between (cast ('1998-04-08' as date) - interval '30' day)
                and (cast ('1998-04-08' as date) + interval '30' day) 
 group by
    w_state,i_item_id
 order by w_state,i_item_id
limit 100

-- end query 1 in stream 0 using template query40.tpl
]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalSort(sort0=[$0], sort1=[$1], dir0=[ASC-nulls-first], dir1=[ASC-nulls-first], fetch=[100])
+- LogicalAggregate(group=[{0, 1}], sales_before=[SUM($2)], sales_after=[SUM($3)])
   +- LogicalProject(w_state=[$71], i_item_id=[$76], $f2=[CASE(<($99, 1998-04-08), -($20, coalesce($56, 0:DOUBLE)), 0:DOUBLE)], $f3=[CASE(>=($99, 1998-04-08), -($20, coalesce($56, 0:DOUBLE)), 0:DOUBLE)])
      +- LogicalFilter(condition=[AND(>=($80, 0.99:DECIMAL(3, 2)), <=($80, 1.49:DECIMAL(3, 2)), =($75, $14), =($13, $61), =($33, $97), >=($99, -(CAST(_UTF-16LE'1998-04-08'):DATE NOT NULL, 2592000000:INTERVAL DAY)), <=($99, +(CAST(_UTF-16LE'1998-04-08'):DATE NOT NULL, 2592000000:INTERVAL DAY)))])
         +- LogicalJoin(condition=[true], joinType=[inner])
            :- LogicalJoin(condition=[true], joinType=[inner])
            :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :- LogicalJoin(condition=[AND(=($16, $49), =($14, $35))], joinType=[left])
            :  :  :  :- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, catalog_sales]])
            :  :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, catalog_returns]])
            :  :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, warehouse]])
            :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item]])
            +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
SortLimit(orderBy=[w_state ASC, i_item_id ASC], offset=[0], fetch=[100], global=[true])
+- Exchange(distribution=[single])
   +- SortLimit(orderBy=[w_state ASC, i_item_id ASC], offset=[0], fetch=[100], global=[false])
      +- HashAggregate(isMerge=[true], groupBy=[w_state, i_item_id], select=[w_state, i_item_id, Final_SUM(sum$0) AS sales_before, Final_SUM(sum$1) AS sales_after])
         +- Exchange(distribution=[hash[w_state, i_item_id]])
            +- LocalHashAggregate(groupBy=[w_state, i_item_id], select=[w_state, i_item_id, Partial_SUM($f2) AS sum$0, Partial_SUM($f3) AS sum$1])
               +- Calc(select=[w_state, i_item_id, CASE((d_date < 1998-04-08), (cs_sales_price - coalesce(cr_refunded_cash, 0)), 0) AS $f2, CASE((d_date >= 1998-04-08), (cs_sales_price - coalesce(cr_refunded_cash, 0)), 0) AS $f3])
                  +- HashJoin(joinType=[InnerJoin], where=[(cs_warehouse_sk = w_warehouse_sk)], select=[cs_warehouse_sk, cs_sales_price, cr_refunded_cash, i_item_id, d_date, w_warehouse_sk, w_state], isBroadcast=[true], build=[right])
                     :- Calc(select=[cs_warehouse_sk, cs_sales_price, cr_refunded_cash, i_item_id, d_date])
                     :  +- HashJoin(joinType=[InnerJoin], where=[(cs_sold_date_sk = d_date_sk)], select=[cs_warehouse_sk, cs_sales_price, cs_sold_date_sk, cr_refunded_cash, i_item_id, d_date_sk, d_date], isBroadcast=[true], build=[right])
                     :     :- Calc(select=[cs_warehouse_sk, cs_sales_price, cs_sold_date_sk, cr_refunded_cash, i_item_id])
                     :     :  +- HashJoin(joinType=[InnerJoin], where=[(i_item_sk = cs_item_sk)], select=[cs_warehouse_sk, cs_item_sk, cs_sales_price, cs_sold_date_sk, cr_refunded_cash, i_item_sk, i_item_id], isBroadcast=[true], build=[right])
                     :     :     :- Calc(select=[cs_warehouse_sk, cs_item_sk, cs_sales_price, cs_sold_date_sk, cr_refunded_cash])
                     :     :     :  +- HashJoin(joinType=[LeftOuterJoin], where=[((cs_order_number = cr_order_number) AND (cs_item_sk = cr_item_sk))], select=[cs_warehouse_sk, cs_item_sk, cs_order_number, cs_sales_price, cs_sold_date_sk, cr_item_sk, cr_order_number, cr_refunded_cash], build=[right])
                     :     :     :     :- Exchange(distribution=[hash[cs_item_sk]])
                     :     :     :     :  +- Calc(select=[cs_warehouse_sk, cs_item_sk, cs_order_number, cs_sales_price, cs_sold_date_sk], where=[cs_warehouse_sk IS NOT NULL])
                     :     :     :     :     +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, catalog_sales, project=[cs_warehouse_sk, cs_item_sk, cs_order_number, cs_sales_price, cs_sold_date_sk]]], fields=[cs_warehouse_sk, cs_item_sk, cs_order_number, cs_sales_price, cs_sold_date_sk])
                     :     :     :     +- Exchange(distribution=[hash[cr_item_sk]])
                     :     :     :        +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, catalog_returns, project=[cr_item_sk, cr_order_number, cr_refunded_cash]]], fields=[cr_item_sk, cr_order_number, cr_refunded_cash])
                     :     :     +- Exchange(distribution=[broadcast])
                     :     :        +- Calc(select=[i_item_sk, i_item_id], where=[SEARCH(i_current_price, Sarg[[0.99..1.49]])])
                     :     :           +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item, project=[i_item_sk, i_item_id, i_current_price]]], fields=[i_item_sk, i_item_id, i_current_price])
                     :     +- Exchange(distribution=[broadcast])
                     :        +- Calc(select=[d_date_sk, d_date], where=[SEARCH(d_date, Sarg[[1998-03-09..1998-05-08]])])
                     :           +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim, project=[d_date_sk, d_date]]], fields=[d_date_sk, d_date])
                     +- Exchange(distribution=[broadcast])
                        +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, warehouse, project=[w_warehouse_sk, w_state]]], fields=[w_warehouse_sk, w_state])
]]>
    </Resource>
  </TestCase>
