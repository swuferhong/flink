  <TestCase name="getExecPlan[q83]">
    <Resource name="sql">
      <![CDATA[/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

-- start query 1 in stream 0 using template query83.tpl and seed 1930872976
with sr_items as
 (select i_item_id item_id,
        sum(sr_return_quantity) sr_item_qty
 from store_returns,
      item,
      date_dim
 where sr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   sr_returned_date_sk   = d_date_sk
 group by i_item_id),
 cr_items as
 (select i_item_id item_id,
        sum(cr_return_quantity) cr_item_qty
 from catalog_returns,
      item,
      date_dim
 where cr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   cr_returned_date_sk   = d_date_sk
 group by i_item_id),
 wr_items as
 (select i_item_id item_id,
        sum(wr_return_quantity) wr_item_qty
 from web_returns,
      item,
      date_dim
 where wr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
		where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   wr_returned_date_sk   = d_date_sk
 group by i_item_id)
  select  sr_items.item_id
       ,sr_item_qty
       ,sr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 sr_dev
       ,cr_item_qty
       ,cr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 cr_dev
       ,wr_item_qty
       ,wr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 wr_dev
       ,(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 average
 from sr_items
     ,cr_items
     ,wr_items
 where sr_items.item_id=cr_items.item_id
   and sr_items.item_id=wr_items.item_id 
 order by sr_items.item_id
         ,sr_item_qty
 limit 100

-- end query 1 in stream 0 using template query83.tpl
]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalSort(sort0=[$0], sort1=[$1], dir0=[ASC-nulls-first], dir1=[ASC-nulls-first], fetch=[100])
+- LogicalProject(item_id=[$0], sr_item_qty=[$1], sr_dev=[*(/(/($1, +(+($1, $3), $5)), 3.0:DECIMAL(2, 1)), 100)], cr_item_qty=[$3], cr_dev=[*(/(/($3, +(+($1, $3), $5)), 3.0:DECIMAL(2, 1)), 100)], wr_item_qty=[$5], wr_dev=[*(/(/($5, +(+($1, $3), $5)), 3.0:DECIMAL(2, 1)), 100)], average=[/(+(+($1, $3), $5), 3.0:DECIMAL(2, 1))])
   +- LogicalFilter(condition=[AND(=($0, $2), =($0, $4))])
      +- LogicalJoin(condition=[true], joinType=[inner])
         :- LogicalJoin(condition=[true], joinType=[inner])
         :  :- LogicalAggregate(group=[{0}], sr_item_qty=[SUM($1)])
         :  :  +- LogicalProject(item_id=[$21], sr_return_quantity=[$9])
         :  :     +- LogicalFilter(condition=[AND(=($1, $20), IN($44, {
LogicalProject(d_date=[$2])
  LogicalFilter(condition=[IN($4, {
LogicalProject(d_week_seq=[$4])
  LogicalFilter(condition=[OR(=($2, CAST(_UTF-16LE'1998-01-02'):DATE NOT NULL), =($2, CAST(_UTF-16LE'1998-10-15'):DATE NOT NULL), =($2, CAST(_UTF-16LE'1998-11-10'):DATE NOT NULL))])
    LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
})])
    LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
}), =($19, $42))])
         :  :        +- LogicalJoin(condition=[true], joinType=[inner])
         :  :           :- LogicalJoin(condition=[true], joinType=[inner])
         :  :           :  :- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store_returns]])
         :  :           :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item]])
         :  :           +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
         :  +- LogicalAggregate(group=[{0}], cr_item_qty=[SUM($1)])
         :     +- LogicalProject(item_id=[$28], cr_return_quantity=[$16])
         :        +- LogicalFilter(condition=[AND(=($1, $27), IN($51, {
LogicalProject(d_date=[$2])
  LogicalFilter(condition=[IN($4, {
LogicalProject(d_week_seq=[$4])
  LogicalFilter(condition=[OR(=($2, CAST(_UTF-16LE'1998-01-02'):DATE NOT NULL), =($2, CAST(_UTF-16LE'1998-10-15'):DATE NOT NULL), =($2, CAST(_UTF-16LE'1998-11-10'):DATE NOT NULL))])
    LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
})])
    LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
}), =($26, $49))])
         :           +- LogicalJoin(condition=[true], joinType=[inner])
         :              :- LogicalJoin(condition=[true], joinType=[inner])
         :              :  :- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, catalog_returns]])
         :              :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item]])
         :              +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
         +- LogicalAggregate(group=[{0}], wr_item_qty=[SUM($1)])
            +- LogicalProject(item_id=[$25], wr_return_quantity=[$13])
               +- LogicalFilter(condition=[AND(=($1, $24), IN($48, {
LogicalProject(d_date=[$2])
  LogicalFilter(condition=[IN($4, {
LogicalProject(d_week_seq=[$4])
  LogicalFilter(condition=[OR(=($2, CAST(_UTF-16LE'1998-01-02'):DATE NOT NULL), =($2, CAST(_UTF-16LE'1998-10-15'):DATE NOT NULL), =($2, CAST(_UTF-16LE'1998-11-10'):DATE NOT NULL))])
    LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
})])
    LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
}), =($23, $46))])
                  +- LogicalJoin(condition=[true], joinType=[inner])
                     :- LogicalJoin(condition=[true], joinType=[inner])
                     :  :- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, web_returns]])
                     :  +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item]])
                     +- LogicalTableScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
Calc(select=[item_id, sr_item_qty, (((sr_item_qty / ((sr_item_qty + cr_item_qty) + wr_item_qty)) / 3.0) * 100) AS sr_dev, cr_item_qty, (((cr_item_qty / ((sr_item_qty + cr_item_qty) + wr_item_qty)) / 3.0) * 100) AS cr_dev, wr_item_qty, (((wr_item_qty / ((sr_item_qty + cr_item_qty) + wr_item_qty)) / 3.0) * 100) AS wr_dev, (((sr_item_qty + cr_item_qty) + wr_item_qty) / 3.0) AS average])
+- SortLimit(orderBy=[item_id ASC, sr_item_qty ASC], offset=[0], fetch=[100], global=[true])
   +- Exchange(distribution=[single])
      +- SortLimit(orderBy=[item_id ASC, sr_item_qty ASC], offset=[0], fetch=[100], global=[false])
         +- SortMergeJoin(joinType=[InnerJoin], where=[(item_id = item_id0)], select=[item_id, cr_item_qty, sr_item_qty, item_id0, wr_item_qty])
            :- Calc(select=[item_id, cr_item_qty, sr_item_qty])
            :  +- SortMergeJoin(joinType=[InnerJoin], where=[(item_id0 = item_id)], select=[item_id, cr_item_qty, item_id0, sr_item_qty])
            :     :- HashAggregate(isMerge=[true], groupBy=[item_id], select=[item_id, Final_SUM(sum$0) AS cr_item_qty])
            :     :  +- Exchange(distribution=[hash[item_id]])
            :     :     +- LocalHashAggregate(groupBy=[item_id], select=[item_id, Partial_SUM(cr_return_quantity) AS sum$0])
            :     :        +- Calc(select=[i_item_id AS item_id, cr_return_quantity])
            :     :           +- HashJoin(joinType=[InnerJoin], where=[(cr_returned_date_sk = d_date_sk)], select=[cr_return_quantity, cr_returned_date_sk, i_item_id, d_date_sk, d_date], isBroadcast=[true], build=[right])
            :     :              :- Calc(select=[cr_return_quantity, cr_returned_date_sk, i_item_id])
            :     :              :  +- HashJoin(joinType=[InnerJoin], where=[(cr_item_sk = i_item_sk)], select=[cr_item_sk, cr_return_quantity, cr_returned_date_sk, i_item_sk, i_item_id], build=[right])
            :     :              :     :- Exchange(distribution=[hash[cr_item_sk]])
            :     :              :     :  +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, catalog_returns, project=[cr_item_sk, cr_return_quantity, cr_returned_date_sk]]], fields=[cr_item_sk, cr_return_quantity, cr_returned_date_sk])
            :     :              :     +- Exchange(distribution=[hash[i_item_sk]])
            :     :              :        +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, item, project=[i_item_sk, i_item_id]]], fields=[i_item_sk, i_item_id])(reuse_id=[2])
            :     :              +- Exchange(distribution=[broadcast])(reuse_id=[3])
            :     :                 +- HashJoin(joinType=[LeftSemiJoin], where=[(d_date = d_date0)], select=[d_date_sk, d_date], isBroadcast=[true], build=[right])
            :     :                    :- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim, project=[d_date_sk, d_date]]], fields=[d_date_sk, d_date])
            :     :                    +- Exchange(distribution=[broadcast])
            :     :                       +- Calc(select=[d_date])
            :     :                          +- NestedLoopJoin(joinType=[LeftSemiJoin], where=[(d_week_seq = d_week_seq0)], select=[d_date, d_week_seq], build=[right])
            :     :                             :- Exchange(distribution=[any], shuffle_mode=[BATCH])
            :     :                             :  +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, date_dim, project=[d_date, d_week_seq]]], fields=[d_date, d_week_seq])(reuse_id=[1])
            :     :                             +- Exchange(distribution=[broadcast])
            :     :                                +- Calc(select=[d_week_seq], where=[SEARCH(d_date, Sarg[1998-01-02, 1998-10-15, 1998-11-10])])
            :     :                                   +- Reused(reference_id=[1])
            :     +- HashAggregate(isMerge=[true], groupBy=[item_id], select=[item_id, Final_SUM(sum$0) AS sr_item_qty])
            :        +- Exchange(distribution=[hash[item_id]])
            :           +- LocalHashAggregate(groupBy=[item_id], select=[item_id, Partial_SUM(sr_return_quantity) AS sum$0])
            :              +- Calc(select=[i_item_id AS item_id, sr_return_quantity])
            :                 +- HashJoin(joinType=[InnerJoin], where=[(sr_returned_date_sk = d_date_sk)], select=[sr_return_quantity, sr_returned_date_sk, i_item_id, d_date_sk, d_date], isBroadcast=[true], build=[right])
            :                    :- Calc(select=[sr_return_quantity, sr_returned_date_sk, i_item_id])
            :                    :  +- HashJoin(joinType=[InnerJoin], where=[(sr_item_sk = i_item_sk)], select=[sr_item_sk, sr_return_quantity, sr_returned_date_sk, i_item_sk, i_item_id], build=[right])
            :                    :     :- Exchange(distribution=[hash[sr_item_sk]])
            :                    :     :  +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, store_returns, project=[sr_item_sk, sr_return_quantity, sr_returned_date_sk]]], fields=[sr_item_sk, sr_return_quantity, sr_returned_date_sk])
            :                    :     +- Exchange(distribution=[hash[i_item_sk]])
            :                    :        +- Reused(reference_id=[2])
            :                    +- Reused(reference_id=[3])
            +- HashAggregate(isMerge=[true], groupBy=[item_id], select=[item_id, Final_SUM(sum$0) AS wr_item_qty])
               +- Exchange(distribution=[hash[item_id]])
                  +- LocalHashAggregate(groupBy=[item_id], select=[item_id, Partial_SUM(wr_return_quantity) AS sum$0])
                     +- Calc(select=[i_item_id AS item_id, wr_return_quantity])
                        +- HashJoin(joinType=[InnerJoin], where=[(wr_returned_date_sk = d_date_sk)], select=[wr_return_quantity, wr_returned_date_sk, i_item_id, d_date_sk, d_date], isBroadcast=[true], build=[right])
                           :- Calc(select=[wr_return_quantity, wr_returned_date_sk, i_item_id])
                           :  +- HashJoin(joinType=[InnerJoin], where=[(wr_item_sk = i_item_sk)], select=[wr_item_sk, wr_return_quantity, wr_returned_date_sk, i_item_sk, i_item_id], build=[right])
                           :     :- Exchange(distribution=[hash[wr_item_sk]])
                           :     :  +- TableSourceScan(table=[[hive, tpcds_bin_partitioned_orc_10000, web_returns, project=[wr_item_sk, wr_return_quantity, wr_returned_date_sk]]], fields=[wr_item_sk, wr_return_quantity, wr_returned_date_sk])
                           :     +- Exchange(distribution=[hash[i_item_sk]])
                           :        +- Reused(reference_id=[2])
                           +- Reused(reference_id=[3])
]]>
    </Resource>
  </TestCase>
